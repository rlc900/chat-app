{"ast":null,"code":"import _toConsumableArray from\"/Users/riannacleary/Desktop/ez-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/riannacleary/Desktop/ez-chat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import ChatHeader from'../ChatHeader/ChatHeader.js';import Input from'../Input/Input.js';import Messages from'../Messages/Messages.js';import TextContainer from'../TextContainer/TextContainer.js';// this module will help retrieve data from URL\nimport queryString from'query-string';import io from'socket.io-client';import'./Chat.css';var socket;var Chat=function Chat(_ref){var location=_ref.location;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),room=_useState4[0],setRoom=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),users=_useState8[0],setUsers=_useState8[1];// store all messages\nvar _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),messagesArr=_useState10[0],setMessagesArr=_useState10[1];var ENDPOINT='https://react-ez-chat.herokuapp.com/';useEffect(function(){var _queryString$parse=queryString.parse(location.search),name=_queryString$parse.name,room=_queryString$parse.room;// console.log(name, room)\n// passing an endpoint to the server\nsocket=io(ENDPOINT);setName(name);setRoom(room);socket.emit('join',{name:name,room:room},function(){});return function(){socket.emit('disconnect');// turning an instance of a chat component off\nsocket.off();};},[ENDPOINT,location.search]);useEffect(function(){socket.on('message',function(message){setMessagesArr([].concat(_toConsumableArray(messagesArr),[message]));});socket.on('roomData',function(_ref2){var users=_ref2.users;setUsers(users);});},[messagesArr]);// func for sending messages\nvar sendMessage=function sendMessage(evt){evt.preventDefault();if(message){socket.emit('sendMessage',message,function(){return setMessage('');});}};// console.log(message, messagesArr)\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"outerContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(ChatHeader,{room:room}),/*#__PURE__*/React.createElement(Messages,{messagesArr:messagesArr,name:name}),/*#__PURE__*/React.createElement(Input,{message:message,setMessage:setMessage,sendMessage:sendMessage})),/*#__PURE__*/React.createElement(TextContainer,{users:users}));};export default Chat;","map":{"version":3,"sources":["/Users/riannacleary/Desktop/ez-chat/src/Components/Chat/Chat.js"],"names":["React","useState","useEffect","ChatHeader","Input","Messages","TextContainer","queryString","io","socket","Chat","location","name","setName","room","setRoom","message","setMessage","users","setUsers","messagesArr","setMessagesArr","ENDPOINT","parse","search","emit","off","on","sendMessage","evt","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ChatHeader from '../ChatHeader/ChatHeader.js'\nimport Input from '../Input/Input.js'\nimport Messages from '../Messages/Messages.js'\nimport TextContainer from '../TextContainer/TextContainer.js'\n// this module will help retrieve data from URL\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css'\n\nlet socket;\n\nconst Chat = ({location}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [users, setUsers] = useState('');\n  // store all messages\n  const [messagesArr, setMessagesArr] = useState([])\n\n  const ENDPOINT = 'https://react-ez-chat.herokuapp.com/'\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search)\n    // console.log(name, room)\n    // passing an endpoint to the server\n    socket = io(ENDPOINT)\n\n    setName(name);\n    setRoom(room);\n\n    socket.emit('join', { name, room }, () => {\n\n    });\n\n    return () => {\n      socket.emit('disconnect')\n      // turning an instance of a chat component off\n      socket.off();\n    }\n  }, [ENDPOINT, location.search]);\n\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      setMessagesArr([...messagesArr, message]);\n    });\n\n    socket.on('roomData', ({users}) => {\n      setUsers(users);\n    });\n  }, [messagesArr])\n\n  // func for sending messages\n  const sendMessage = (evt) => {\n    evt.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''))\n    }\n  }\n\n  // console.log(message, messagesArr)\n\n  return (\n    <div className='outerContainer'>\n      <div className='container'>\n        <ChatHeader room={room}/>\n        <Messages messagesArr={messagesArr} name={name}/>\n        <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\n      </div>\n      <TextContainer users={users}/>\n    </div>\n  )\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}